package model.am;


import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import model.am.common.Oando_AM;

import model.vo.DutyAllowanceLinesVoImpl;
import model.vo.DutyAllowance_VOImpl;
import model.vo.XXSSHR_TAP_EMP_FORM_VOImpl;
import model.vo.XXSSHR_TAP_EMP_LINES_VOImpl;
import model.vo.XssshrKbcPeriodVOImpl;
import model.vo.XxsshrKnowBuddyCareVOImpl;

import oracle.adf.share.ADFContext;

import oracle.jbo.ApplicationModule;
import oracle.jbo.ViewCriteria;
import oracle.jbo.ViewCriteriaRow;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Aug 22 17:52:17 IST 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class Oando_AMImpl extends ApplicationModuleImpl implements ApplicationModule, Oando_AM {
    /**
     * This is the default constructor (do not remove).
     */
    public Oando_AMImpl() {
    }


    /**
     * Container's getter for Lookup_View_ROVO.
     * @return Lookup_View_ROVO
     */
    public String createUop(BigDecimal hdrId) {
      //  String p_errorMessgae = null;
                String p_errorCode =null;
        try {
            String stmt1 = "begin xxfa_uop_depr_pkg.create_line(:p_uop_depr_hdr_id,:p_return_code,:p_return_msg); end;";
            CallableStatement cst = null;
            cst = this.getDBTransaction().createCallableStatement(stmt1, 0);
            cst.setObject("p_uop_depr_hdr_id", hdrId);
            cst.registerOutParameter("p_return_code", Types.VARCHAR);
            cst.registerOutParameter("p_return_msg", Types.VARCHAR);
            cst.executeUpdate();
            if (cst.getObject("p_return_code")  != null) {
               // p_errorMessgae = cst.getObject("p_return_msg").toString();
                                p_errorCode = cst.getObject("p_return_code").toString();
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return p_errorCode;
              
    }

    
    
//    
//    public String createUop(BigDecimal uop_depr_hdr_id) throws CommonJBOException,
//    SQLException{
//
//            java.math.BigDecimal p_uop_depr_hdr_id = new java.math.BigDecimal();
//
//            try {
//                p_uop_depr_hdr_id = new java.math.BigDecimal(uop_depr_hdr_id);
//            } catch (CommonJBOException e) {
//                throw new CommonJBOException(e.getMessage());
//            }
//            String stmt1 = "begin \n" + "xxfa_uop_depr_pkg(:p_uop_depr_hdr_id);\n" + "end;";
//            CallableStatement cst = null;
//            try {
//                cst = this.getDBTransaction().createCallableStatement(stmt1, 0);
//                cst.setObject("p_uop_depr_hdr_id", p_uop_depr_hdr_id);
//            cst.registerOutParameter("p_return_code", Types.VARCHAR);
//            cst.registerOutParameter("p_return_msg", Types.VARCHAR);
//            cst.executeUpdate();
//            return cst.getString("p_return_code"+" "+"p_return_msg");
//            } catch (CommonJBOException e) {
//
//
//            throw new CommonJBOException(e.getMessage());
//
//            }
//            finally {
//                        if (cst != null) {
//                            try {
//                                cst.close();
//
//                            } catch (CommonJBOException e) {
//                                // _log.severe("exception occured in invokereceiptstatus method"+e.getmessage());
//                                // throw new commonjboexception(e.getmessage());
//
//                                return e.toString();
//                            }
//                        }
//                    }
//        }
//


    /**
     * Container's getter for DutyAllowance_VO1.
     * @return DutyAllowance_VO1
     */
    public DutyAllowance_VOImpl getDutyAllowance_VO() {
        return (DutyAllowance_VOImpl) findViewObject("DutyAllowance_VO");
    }

    /**
     * Container's getter for DutyAllow_ROVO1.
     * @return DutyAllow_ROVO1
     */
    public ViewObjectImpl getDutyAllow_ROVO() {
        return (ViewObjectImpl) findViewObject("DutyAllow_ROVO");
    }
    public BigDecimal getPersonId(String userName) {

        BigDecimal personId = new BigDecimal(0);
        ViewObjectImpl vo = this.getUsers_ROVO();
        ViewCriteria vc = vo.createViewCriteria();
        ViewCriteriaRow vcRow = vc.createViewCriteriaRow();
        vcRow.setAttribute("Username", userName);
        vc.addRow(vcRow);
        vo.applyViewCriteria(vc);
        vo.executeQuery();
        if (vo.getEstimatedRowCount() > 0) {
            personId = (BigDecimal) vo.first().getAttribute("PersonId");
            ADFContext.getCurrent()
                      .getSessionScope()
                      .put("personId", personId);
        }
        getAssignmentType();
        return personId;
    }

    public void filterUser() {
        String userName= ADFContext.getCurrent()
                                    .getSessionScope()
                                    .get("userName")
                                    .toString();
        System.err.println(userName + "--------------User Name");
        ViewObjectImpl vo = getXXSSHR_TAP_EMP_FORM_VO();
        vo.setNamedWhereClauseParam("b_username", userName);
        vo.executeQuery();
        System.err.println(vo.getEstimatedRowCount() + "-------Row Count");
    }

    public String getAssignmentType() {
        String assignmentType = null;
        Object obj = ADFContext.getCurrent()
                               .getSessionScope()
                               .get("personId");
       // System.out.println("getAssignmentType()  person id is --------- " + obj);
        ViewObjectImpl vo = this.getEmployee_View_ROVO();
        ViewCriteria vc = vo.createViewCriteria();
        ViewCriteriaRow vcRow = vc.createViewCriteriaRow();
        vcRow.setAttribute("PersonId", obj);
        vc.addRow(vcRow);
        vo.applyViewCriteria(vc);
        vo.executeQuery();
        if (vo.getEstimatedRowCount() > 0) {
            assignmentType = (String) vo.first().getAttribute("AssignmentType");
          //  System.out.println(" getAssignmentType()assignmentType--------- " + assignmentType);
            ADFContext.getCurrent()
                      .getSessionScope()
                      .put("assignmentType", assignmentType);
        }

        return assignmentType;
    }


    /**
     * Container's getter for Users_ROVO1.
     * @return Users_ROVO1
     */
    public ViewObjectImpl getUsers_ROVO() {
        return (ViewObjectImpl) findViewObject("Users_ROVO");
    }

    /**
     * Container's getter for Employee_View_ROVO1.
     * @return Employee_View_ROVO1
     */
    public ViewObjectImpl getEmployee_View_ROVO() {
        return (ViewObjectImpl) findViewObject("Employee_View_ROVO");
    }

    /**
     * Container's getter for ExtraDutyAllowanceROVO1.
     * @return ExtraDutyAllowanceROVO1
     */
    public ViewObjectImpl getExtraDutyAllowanceROVO() {
        return (ViewObjectImpl) findViewObject("ExtraDutyAllowanceROVO");
    }


    /**
     * Container's getter for Payroll_ROVO1.
     * @return Payroll_ROVO1
     */
    public ViewObjectImpl getPayroll_ROVO() {
        return (ViewObjectImpl) findViewObject("Payroll_ROVO");
    }

    /**
     * Container's getter for DutyAllowance_VO1.
     * @return DutyAllowance_VO1
     */
    public DutyAllowance_VOImpl getDutyAllowance_VO1() {
        return (DutyAllowance_VOImpl) findViewObject("DutyAllowance_VO1");
    }

    /**
     * Container's getter for DutyAllowanceLinesVo1.
     * @return DutyAllowanceLinesVo1
     */
    public DutyAllowanceLinesVoImpl getDutyAllowanceLinesVo() {
        return (DutyAllowanceLinesVoImpl) findViewObject("DutyAllowanceLinesVo");
    }

    /**
     * Container's getter for DutyAllowance_VL1.
     * @return DutyAllowance_VL1
     */
    public ViewLinkImpl getDutyAllowance_VL() {
        return (ViewLinkImpl) findViewLink("DutyAllowance_VL");
    }

    /**
     * Container's getter for XxsshrKnowBuddyCareVO1.
     * @return XxsshrKnowBuddyCareVO1
     */
    public XxsshrKnowBuddyCareVOImpl getXxsshrKnowBuddyCareVO() {
        return (XxsshrKnowBuddyCareVOImpl) findViewObject("XxsshrKnowBuddyCareVO");
    }


    /**
     * Container's getter for XssshrKbcPeriodVO1.
     * @return XssshrKbcPeriodVO1
     */
    public XssshrKbcPeriodVOImpl getXssshrKbcPeriodVO() {
        return (XssshrKbcPeriodVOImpl) findViewObject("XssshrKbcPeriodVO");
    }

    /**
     * Container's getter for KbcHdrPeroidVL1.
     * @return KbcHdrPeroidVL1
     */
    public ViewLinkImpl getKbcHdrPeroidVL() {
        return (ViewLinkImpl) findViewLink("KbcHdrPeroidVL");
    }

    /**
     * Container's getter for XXSSHR_TAP_EMP_FORM_VO1.
     * @return XXSSHR_TAP_EMP_FORM_VO1
     */
    public XXSSHR_TAP_EMP_FORM_VOImpl getXXSSHR_TAP_EMP_FORM_VO() {
        return (XXSSHR_TAP_EMP_FORM_VOImpl) findViewObject("XXSSHR_TAP_EMP_FORM_VO");
    }

    /**
     * Container's getter for XXSSHR_TAP_EMP_LINES_VO1.
     * @return XXSSHR_TAP_EMP_LINES_VO1
     */
    public XXSSHR_TAP_EMP_LINES_VOImpl getXXSSHR_TAP_EMP_LINES_VO() {
        return (XXSSHR_TAP_EMP_LINES_VOImpl) findViewObject("XXSSHR_TAP_EMP_LINES_VO");
    }

    /**
     * Container's getter for XXSSHR_TAP_EMP_FORM_LINE_VL1.
     * @return XXSSHR_TAP_EMP_FORM_LINE_VL1
     */
    public ViewLinkImpl getXXSSHR_TAP_EMP_FORM_LINE_VL() {
        return (ViewLinkImpl) findViewLink("XXSSHR_TAP_EMP_FORM_LINE_VL");
    }
}
